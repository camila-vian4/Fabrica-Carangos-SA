import operacional
from financeiro import financeiro

def voltarMenu():
    while True:
        print("\nDeseja continuar ou voltar ao menu principal? üîÑüè†")
        print("\n1. Continuar nesse m√≥dulo")
        print("2. Voltar ao menu principal")
        opcao_menu = input("\nSelecione a op√ß√£o desejada: ").lower()

        if opcao_menu in ["1", "continuar", "c"]:
            return "continuar"  # aqui diz para quem chamou: continuar
        elif opcao_menu in ["2", "voltar", "v", "menu principal"]:
            return "voltar"  # aqui diz para quem chamou: voltar
        else:
            print("\nOp√ß√£o inv√°lida. Tente novamente. ‚ùå")

producao_semana = None

print("\n\n")
print("--- F√°brica Carangos S/A üöó‚ú®")
print("Seja bem-vindo(a) ao nosso sistema! ü§ñüõ†Ô∏è")

while True:

    print("\n\nüè† > MENU PRINCIPAL:\n")
    print("1 - M√≥dulo Operacional üìã")
    print("2 - M√≥dulo de Estoque üì¶")
    print("3 - M√≥dulo Financeiro üí∏")
    print("4 - M√≥dulo de Recursos Humanos üë•")
    print("5 - Sair ‚ùå")
    opcao = input("\n‚û°Ô∏è  Escolha uma op√ß√£o: ")

    # Inicializa as vari√°veis necess√°rias
    if opcao == "5":
        print("\nAgradecemos por utilizar nosso sistema! At√© logo! üëã")
        exit()
    elif opcao not in ["1", "2", "3", "4"]:
        print("\nOp√ß√£o inv√°lida. Tente novamente. ‚ùå")
        continue

    match opcao:

        case "1":
            while True:
            # M√≥dulo Operacional
                print("\n\n--- M√ìDULO OPERACIONAL | üìã‚ú®")
                print("\n1. Cadastro de Produ√ß√£o üöó")
                print("2. Relat√≥rio de Produ√ß√£o üìä")
                print("3. Simula√ß√£o de Produ√ß√£o üìà")
                print("4. Proje√ß√£o de Produ√ß√£o üìÖ")
                print("5. Sair ‚ùå")
                opcao_operacional = input("\n‚û°Ô∏è  Escolha uma op√ß√£o: ")

                if opcao_operacional == "5":
                    print("\nAgradecemos por utilizar nosso sistema! At√© logo! üëã")
                    exit()
                elif opcao_operacional not in ["1", "2", "3", "4", "5"]:
                    print("\nOp√ß√£o inv√°lida. Tente novamente. ‚ùå")

                # Chamando as op√ß√µes do m√≥dulo operacional
                match opcao_operacional:

                    case "1":
                        print("\n\n--- CADASTRO DE PRODU√á√ÉO | üè≠")
                        producao_semana = operacional.cadastrar_producao()
                        resposta = voltarMenu()
                        if resposta == "voltar":
                            break

                    case "2":
                        print("\n\n--- RELAT√ìRIO DE PRODU√á√ÉO | üìä\n")
                        if producao_semana is None:
                            print("\nNenhum cadastro encontrado! Cadastre antes de emitir o relat√≥rio. ‚ö†Ô∏è")
                        else:
                            operacional.emitir_relatorio(producao_semana)
                        resposta = voltarMenu()
                        if resposta == "voltar":
                            break
                    case "3":
                        print("\n\n--- SIMULA√á√ÉO DE PRODU√á√ÉO | üìà")
                        if producao_semana is None:
                            print("\nNenhum cadastro encontrado! Cadastre antes de simular. ‚ö†Ô∏è")
                        else:
                            total_geral, media_dia, media_turno, total_turno = operacional.calcular_totais(producao_semana)
                            producao_mensal, producao_anual = operacional.simular_projecoes(total_geral)
                            print(f"\nProdu√ß√£o mensal estimada: {producao_mensal} unidades")
                            print(f"Produ√ß√£o anual estimada: {producao_anual} unidades")
                        resposta = voltarMenu()
                        if resposta == "voltar":
                            break
        

# producao_semana = operacional.cadastrar_producao()
# total_geral, media_dia, media_turno, total_turno = operacional.calcular_totais(producao_semana)
# producao_mensal, producao_anual = operacional.simular_projecoes(total_geral)
# capacidade_mensal_ideal, capacidade_anual_ideal = operacional.calcular_producao_ideal()
# operacional.emitir_relatorio(producao_semana)
# abastecimento.voltarMenu()